#? ARTILLERY - HERRAMIENTA DE PRUEBAS DE CARGA (Simula varios usuarios virtuales que hacen peticiones para probar el rendimiento de la aplicaci√≥n)


#? Como usar el test: 
#? npm run test:admin    
#? Los resultados aparecen en la terminal y tambien en el archivo results-admin.json        

# ESTE TEST ES CON LA SESION DE CARLA INICIADA HACIENDO VARIAS SOLICITUDES
#! No cargamos mas usuarios porque tenemos que tener esa cantidad y hacer login para cada uno de ellos, , este test en este momento solo es un esqueleto preparado para realizar esa accion

config:
  target: "http://localhost:3000" # Cambia esto si tu servidor est√° en otra URL

scenarios:
  # Escenario 1: Inicio de sesi√≥n y captura de sesi√≥n de Carla ‚úÖ
  - name: "Login and capture session"
    flow:
      - post:
          url: "/users/auth/login" # Endpoint para el login
          json:
            email: "carla@neurodiverse.cl"
            password: "Neurodiverse2025"
          capture:
            - header: "set-cookie" # Captura la cookie de sesi√≥n
              as: sessionCookie

  # Escenario 2: Acciones autenticadas ‚úÖ
  - name: "Authenticated user actions"
    flow:
      # Acceso a la p√°gina principal de la cuenta
      - get:
          url: "/account"
          headers:
            Cookie: "{{ sessionCookie }}"
          tags:
            name: "account"
      - think: 1 # Espera 1 segundo antes de la siguiente operaci√≥n
    
    # Acceso al panel de administraci√≥n ‚úÖ
      - get:
          url: "/admin-panel"
          headers:
            Cookie: "{{ sessionCookie }}"
          tags:
            name: "admin-panel"
      - think: 1

     # Acceso a la administraci√≥n de usuarios ‚úÖ
      - get:
          url: "/admin/users"
          headers:
            Cookie: "{{ sessionCookie }}"
          tags:
            name: "admin-users"
      - think: 1

      # Acceso a la p√°gina de productos ‚úÖ
      - get:
          url: "/products"
          headers:
            Cookie: "{{ sessionCookie }}"
          tags:
            name: "products"
      - think: 1


      # Acceso a la p√°gina de un producto espec√≠fico ‚úÖ
      - get:
          url: "/item"
          headers:
            Cookie: "{{ sessionCookie }}"
          tags:
            name: "item"
      - think: 1

      # Acceso a la p√°gina de checkout ‚úÖ
      - get:
          url: "/checkout"
          headers:
            Cookie: "{{ sessionCookie }}"
          tags:
            name: "checkout"
      - think: 1

      # Acceso a la administraci√≥n de √≥rdenes (arroja codigo 302 de redireccion) üêû‚úÖ
      - get:
          url: "/admin/orders"
          headers:
            Cookie: "{{ sessionCookie }}"
          tags:
            name: "admin-orders"
      - think: 1     

      # Acceso a la administraci√≥n de productos (arroja error 302 de redireccion) üêû‚úÖ
      - get:
          url: "/admin/products"
          headers:
            Cookie: "{{ sessionCookie }}"
          tags:
            name: "admin-products"
      - think: 1

      # Acceso a la p√°gina de configuraci√≥n de la cuenta (arroja error 302 de redireccion) ‚úÖ
      - get:
          url: "/account-settings"
          headers:
            Cookie: "{{ sessionCookie }}"
          tags:
            name: "account-settings"
      - think: 1

      # Acceso a la p√°gina de √≥rdenes del usuario (arroja error 302 de redireccion) ‚úÖ
      - get:
          url: "/orders"
          headers:
            Cookie: "{{ sessionCookie }}"
          tags:
            name: "orders"
      - think: 1


#? npm run test:admin
