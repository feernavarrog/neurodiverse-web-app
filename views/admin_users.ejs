<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Administración de Usuarios - NeuroDiverse</title>

    <link
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
    rel="stylesheet"
    />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <link
    href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
    rel="stylesheet"
    />
    <link rel="stylesheet" href="/css/style.css" />
    <link rel="stylesheet" href="/css/homestyle.css" />
    <link rel="stylesheet" href="/css/orderstyle.css" /> 
    <link rel="stylesheet" href="/css/admin_users.css" />
    <link rel="stylesheet" href="/css/popupstyles.css" />
</head>
<body>

    <%- include('partials/navbar') %>
    <%- include('partials/sidebar') %>
    <%- include('partials/cart') %>
    <%- include('partials/login-modal') %>
    <%- include('partials/popups') %>

    <main class="admin-users-main">
        <div class="admin-users-header">
            <h2>Administración de Usuarios</h2>
            <p>Aquí puedes gestionar los usuarios registrados en la plataforma.</p>
            <hr>
        </div>

        <table id="dynamic-admin-users-table" class="admin-users-table" border="1">
            <thead>
                <tr>
                    <th>Nombre</th>
                    <th>Correo Electrónico</th>
                    <th>RUT</th>
                    <th>Acción</th>
                </tr>
            </thead>
            <tbody>
                <!-- Los datos se generarán dinámicamente -->
            </tbody>
        </table>
    </main>

    <%- include('partials/footer') %>
    <script src="/js/popup.js"></script>
    <script src="/js/crudManager.js"></script>
    <script src="/js/global.js"></script>
    <script>
        async function loadAdminUsers() {
            try {
                const usersResponse = await fetchUsers({ column: 'user_role', value: 'customer' });
                const users = usersResponse.rows || [];
                let tableBody = document.querySelector("#dynamic-admin-users-table tbody");
                tableBody.innerHTML = "";

                users.forEach(user => {
                    const isActive = user[13] === 1;
                    const toggleText = isActive ? "Desactivar" : "Activar";

                    let row = `
                        <tr>
                            <td class="admin-user-status-${user[13]}">${user[4]} ${user[5]}</td>
                            <td class="admin-user-status-${user[13]}">${user[2]}</td>
                            <td class="admin-user-status-${user[13]}">${user[1]}</td>
                            <td class="admin-user-status-${user[13]}">
                                
                                <button class="admin-user-btn-deactivate" onclick="deactivateUser(${user[0]}, ${isActive})">${toggleText}</button>
                                <button class="admin-user-btn-delete" onclick="deleteUser(${user[0]})">Eliminar</button>
                            </td>
                        </tr>
                    `;
                    tableBody.innerHTML += row;
                });
            } catch (error) {
                console.error("⚠️ Error al cargar usuarios:", error);
            }
        }

        async function deactivateUser(userId, isCurrentlyActive) {
            const newStatus = isCurrentlyActive ? 0 : 1;

            try {
                const userResponse = await fetchUsers({ column: "user_id", value: userId });
                if (!userResponse.rows || userResponse.rows.length === 0) {
                    throw new Error("Usuario no encontrado");
                }

                let userData = userResponse.rows[0];

                const updatedUser = {
                    user_id: userData[0],
                    rut: userData[1],
                    email: userData[2],
                    password: userData[3],
                    first_name: userData[4],
                    last_name: userData[5],
                    birth_date: formatDateInput(userData[6]),
                    city: userData[7],
                    district: userData[8],
                    street: userData[9],
                    street_number: userData[10],
                    mobile_phone: userData[11],
                    additional_address_info: userData[12],
                    active: newStatus,
                    user_role: userData[14]
                };

                await updateUser(updatedUser);

                showPopup("✅ Estado cambiado correctamente");
                loadAdminUsers();
            } catch (error) {
                console.error("⚠️ Error al cambiar estado:", error);
            }
        }

        async function deleteUser(userId) {
            try {
                await fetch(`/users/delete/${userId}`, {
                    method: 'DELETE',
                    headers: { 'Content-Type': 'application/json' }
                });

                showPopup("✅ Usuario eliminado correctamente");
                loadAdminUsers();
            } catch (error) {
                console.error("⚠️ Error al eliminar usuario:", error);
            }
        }

        document.addEventListener("DOMContentLoaded", loadAdminUsers);
    </script>
</body>
</html>
