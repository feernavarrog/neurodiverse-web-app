<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registro - Neuroverse Market</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet" />
    <script src="https://accounts.google.com/gsi/client" async defer></script>
    <link rel="stylesheet" href="/css/registrostyle.css" />
    <link rel="stylesheet" href="/css/style.css" />
    <link rel="stylesheet" href="/css/resgistrostyle.css" />
    <link rel="stylesheet" href="/css/popupstyles.css" />

</head>

<body>
    <%- include('partials/first-nav') %>
    <%- include('partials/navbar') %>
    <%- include('partials/sidebar') %>
    <%- include('partials/cart') %>
    <%- include('partials/login-modal') %>
    <%- include('partials/popups') %>
    <main class="registro-container">
        <h2 class="registro-titulo">REGISTRARSE</h2>
        
        <div class="registro-formulario">
            <!-- 游댳 Secci칩n: Datos Personales -->
            <h3 class="registro-subtitulo">Datos Personales</h3>
            <input type="email" id="email" class="registro-input" placeholder="Correo Electr칩nico" required>
            <p id="email-error" class="error-message"></p>

            <input type="password" id="password" class="registro-input" placeholder="Contrase침a" required>
            <p id="password-tip" class="form-tip">Debe tener al menos 12 caracteres, una may칰scula, una min칰scula, un n칰mero y un s칤mbolo.</p>
            <p id="password-error" class="error-message"></p>

            <input type="text" id="first-name" class="registro-input" placeholder="Nombre" required>
            <p id="first-name-error" class="error-message"></p>

            <input type="text" id="last-name" class="registro-input" placeholder="Apellido" required>
            <p id="last-name-error" class="error-message"></p>

            <label for="birth-date">Fecha de Nacimiento:</label>
            <input type="date" id="birth-date" class="registro-input" required>
            <p id="birth-date-error" class="error-message"></p>

            <input type="text" id="mobile-phone" class="registro-input" placeholder="Tel칠fono/M칩vil" required>
            <p id="mobile-phone-error" class="error-message"></p>

            <hr>

            <!-- 游댳 Secci칩n: Datos para el Env칤o -->
            <h3 class="registro-subtitulo">Datos para el Env칤o</h3>
            <input type="text" id="rut" class="registro-input" placeholder="RUT (Ej: 12345678-9)" required>
            <p id="rut-error" class="error-message"></p>

            <p class="registro-info">游늷 Por el momento, solo realizamos env칤os dentro de la Regi칩n Metropolitana.</p>

            <label for="region">Regi칩n:</label>
            <select id="region" class="registro-input" disabled>
                <option value="Santiago" selected>Regi칩n Metropolitana</option>
            </select>

            <label for="comuna">Comuna:</label>
            <select id="comuna" class="registro-input" required>
                <option value="" selected disabled>Selecciona tu comuna</option>
                <option value="Cerrillos">Cerrillos</option>
                <option value="Cerro Navia">Cerro Navia</option>
                <option value="Conchali">Conchal칤</option>
                <option value="El Bosque">El Bosque</option>
                <option value="Estacion Central">Estaci칩n Central</option>
                <option value="Huechuraba">Huechuraba</option>
                <option value="Independencia">Independencia</option>
                <option value="La Cisterna">La Cisterna</option>
                <option value="La Florida">La Florida</option>
                <option value="La Granja">La Granja</option>
                <option value="La Pintana">La Pintana</option>
                <option value="La Reina">La Reina</option>
                <option value="Las Condes">Las Condes</option>
                <option value="Lo Barnechea">Lo Barnechea</option>
                <option value="Lo Espejo">Lo Espejo</option>
                <option value="Lo Prado">Lo Prado</option>
                <option value="Macul">Macul</option>
                <option value="Maipu">Maip칰</option>
                <option value="칌u침oa">칌u침oa</option>
                <option value="Pedro Aguirre Cerda">Pedro Aguirre Cerda</option>
                <option value="Pe침alolen">Pe침alol칠n</option>
                <option value="Providencia">Providencia</option>
                <option value="Pudahuel">Pudahuel</option>
                <option value="Puente Alto">Puente Alto</option>
                <option value="Quilicura">Quilicura</option>
                <option value="Quinta Normal">Quinta Normal</option>
                <option value="Recoleta">Recoleta</option>
                <option value="Renca">Renca</option>
                <option value="San Bernardo">San Bernardo</option>
                <option value="San Joaquin">San Joaqu칤n</option>
                <option value="San Jose de Maipo">San Jos칠 de Maipo</option>
                <option value="San Miguel">San Miguel</option>
                <option value="San Ramon">San Ram칩n</option>
                <option value="Santiago Centro">Santiago Centro</option>
                <option value="Vitacura">Vitacura</option>
            </select>
            <p id="comuna-error" class="error-message"></p>

            <input type="text" id="street" class="registro-input" placeholder="Calle" required>
            <p id="street-error" class="error-message"></p>

            <input type="text" id="street-number" class="registro-input" placeholder="N칰mero" required>
            <p id="street-number-error" class="error-message"></p>

            <input type="text" id="additional-info" class="registro-input" placeholder="Informaci칩n adicional">

            <hr>

            <!-- 游댳 Secci칩n: Autorizaci칩n de uso de datos personales -->
            <div class="alert alert-danger" role="alert">
                Autorizo el uso de mis datos personales 칰nicamente con fines de mejora del servicio.<br>
                La informaci칩n proporcionada no ser치 asociada a mi identidad ni utilizada para otros prop칩sitos. Las condiciones marcadas ser치n tratadas de forma an칩nima y confidencial, y como usuario podr칠 desistir en cualquier momento desmarcando opciones desde mi perfil.
            </div>
            
            <div class="form-check mb-3">
                <input class="form-check-input" type="checkbox" id="authorization-checkbox">
                <label class="form-check-label" for="authorization-checkbox">
                He le칤do y acepto el uso de mis datos personales seg칰n lo indicado anteriormente.
                </label>
                <p id="authorization-error" class="error-message"></p>
            </div>

            <!-- 游댳 Secci칩n: Condiciones Clinicas -->
            <h3 class="registro-subtitulo">Condiciones Cl칤nicas</h3>
            <div id="conditions-container">
                <!-- Las Condiciones Clinicas se cargar치n din치micamente -->
            </div>

            <button id="register-btn" class="registro-boton">Registrarse</button>
        </div>
    </main>

    <script src="/js/popup.js"></script>
    <script src="/js/crudManager.js"></script>
    <script src="/js/global.js"></script>
    <script src="/js/authManager.js"></script>
    <%- include('partials/footer') %>
    <script>
        
    let originalPasswordHash = null;
    
    // 游댳 Obtener el email desde la URL si existe
    function getEmailFromURL() {
        const params = new URLSearchParams(window.location.search);
        const emailFromURL = params.get("email");
        const titleElement = document.querySelector(".registro-titulo");

        if (emailFromURL) {
            const emailField = document.getElementById("email");
            const passwordField = document.getElementById("password");

            emailField.value = emailFromURL;
            emailField.disabled = true; // Deshabilitar el campo de email
            passwordField.removeAttribute("required"); // Eliminar la validaci칩n de campo requerido
            passwordField.style.display = "none"; // Ocultar el campo de contrase침a

            // Cambiar el t칤tulo cuando el email viene prellenado
            titleElement.innerText = "Cu칠ntanos un poco m치s de ti";
        }
    }

    // 游댳 Cargar Condiciones clinicas desde la base de datos usando crudManager
    async function loadConditions() {
        const conditionsContainer = document.getElementById("conditions-container");
        
        const conditions = await fetchConditions();
        if (conditions.rows) {
            conditions.rows.forEach(condition => {
                const conditionId = condition[0];
                const conditionName = condition[1];
                conditionsContainer.innerHTML += `
                    <label class="registro-label">
                        <input type="checkbox" class="condition-checkbox" value="${conditionId}"> ${conditionName}
                    </label>
                `;
            });
        }
    }

    // 游댳 Mostrar mensajes de error en el formulario
        function displayErrors(errors) {
        // Limpiar mensajes de error previos
        document.querySelectorAll(".error-message").forEach(msg => msg.textContent = "");
        document.querySelectorAll(".registro-input").forEach(input => input.classList.remove("error"));

        // 游늷 Asegurar que el tip de la contrase침a se muestra por defecto
        document.getElementById("password-tip").style.display = "block";

        for (const field in errors) {
            const inputField = document.getElementById(field);
            const errorMessage = document.getElementById(`${field}-error`);

            if (inputField) {
                inputField.classList.add("error");
            }

            if (errorMessage) {
                errorMessage.textContent = errors[field];
                errorMessage.style.color = "red";
            }

            // Si el error es en la contrase침a, ocultar el tip
            if (field === "password") {
                document.getElementById("password-tip").style.display = "none";
            }
        }
    }

    // 游댳 Evento para registrar usuario y sus patolog칤as
    async function registerUser() {
        const selectedConditions = [...document.querySelectorAll('.condition-checkbox:checked')].map(cb => cb.value);
        const emailFromURL = new URLSearchParams(window.location.search).get("email");
        
        const userData = {
        rut: document.getElementById("rut").value.trim(),
        email: document.getElementById("email").value.trim(),
        password: emailFromURL ? null : document.getElementById("password").value.trim(),
        first_name: document.getElementById("first-name").value.trim(),
        last_name: document.getElementById("last-name").value.trim(),
        birth_date: document.getElementById("birth-date").value,
        city: "Santiago",
        district: document.getElementById("comuna").value,
        street: document.getElementById("street").value.trim(),
        street_number: document.getElementById("street-number").value.trim(),
        mobile_phone: document.getElementById("mobile-phone").value.trim(),
        additional_address_info: document.getElementById("additional-info").value.trim(),
        active: 1,
        user_role: "customer"
    };

    // 游댳 Validar los datos antes de enviarlos
    const inputErrors = validateUserForm(userData);

    // 游늷 Si hay errores, mostrarlos y detener el registro
    if (Object.keys(inputErrors).length > 0) {
        displayErrors(inputErrors);
        return;
    }

    // 游댳 Validar si el usuario existe o el rut existe
    const errors = await validateUserFormAsync(userData); // 游녣 usar versi칩n async

    if (Object.keys(errors).length > 0) {
        displayErrors(errors);
        return;
    }

    // Validar si el checkbox de autorizaci칩n est치 marcado
    const authorizationCheckbox = document.getElementById("authorization-checkbox");
    const authorizationError = document.getElementById("authorization-error");

    if (!authorizationCheckbox.checked) {
        authorizationError.textContent = "Debes aceptar el uso de tus datos personales para continuar.";
        authorizationError.style.color = "red";
        return;
    } else {
        authorizationError.textContent = ""; // Limpiar error si est치 marcado
    }

    const response = await createUser(userData);

    const userResult = await fetchUsers({ column: "email", value: userData.email });

    // 游늷 Verificar si el usuario existe
    if (response.error) {
        showPopup(response.error);
        return;
    }

    if (!userResult.rows || userResult.rows.length === 0) {
        showPopup("No se encontr칩 el usuario registrado.");
        return;
    }

    const userId = userResult.rows[0][0];

    for (const conditionId of selectedConditions) {
        await assignUserCondition(userId, conditionId);
    }

    // Auto-login despu칠s de registrar
    try {
        const autoLoginData = await autoLogin(userData.email);
    } catch (error) {
        showPopup(error.message);
        return;
    }

    // 游늷 Guardar usuario en sessionStorage con nomenclatura correcta
    sessionStorage.setItem("user", JSON.stringify({
        userId: userId,
        email: userData.email,
        firstName: userData.first_name,
        lastName: userData.last_name,
        birthDate: userData.birth_date,
        city: userData.city,
        district: userData.district,
        street: userData.street,
        streetNumber: userData.street_number,
        mobilePhone: userData.mobile_phone,
        additionalInfo: userData.additional_address_info,
        active: userData.active,
        userRole: userData.user_role,
        googleAuth: emailFromURL ? true : undefined // 游늷 Agregar googleAuth solo si el email proviene de la URL
    }));

    showPopup("Registro exitoso. Ser치s redirigido a la p치gina principal.");
        window.location.href = "/";
    }

    document.addEventListener("DOMContentLoaded", function () {
        getEmailFromURL();
        loadConditions();
        document.getElementById("register-btn").addEventListener("click", registerUser);
    });
    </script>
    <script src="/js/validation.js"></script>
</body>
</html>
